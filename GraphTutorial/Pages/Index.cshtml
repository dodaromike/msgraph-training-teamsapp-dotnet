@page
@model IndexModel
@{
  ViewData["Title"] = "Home page";
}

<div id="tab-container">
  <h1 class="ms-fontSize-24 ms-fontWeight-semibold">Loading...</h1>
</div>

@section Scripts
{
  <script>
    (function () {
  if (microsoftTeams) {
    microsoftTeams.initialize();

    microsoftTeams.authentication.getAuthToken({
      successCallback: (token) => {
  loadUserCalendar(token, (events) => {
    renderCalendar(events);
  });
}
    });
  }
})();

function renderError(error) {
  $('#tab-container').empty();

  $('<h1/>', {
    text: 'Error'
  }).appendTo('#tab-container');

  $('<code/>', {
    text: JSON.stringify(error, Object.getOwnPropertyNames(error)),
    style: 'word-break: break-all;'
  }).appendTo('#tab-container');
}
// <LoadUserCalendarSnippet>
    function loadUserCalendar(token, callback) {
      // Call the API
      fetch('/calendar', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      }).then(response => {
        if (response.ok) {
          // Get the JSON payload
          response.json()
            .then(events => {
              callback(events);
            });
        }
        else if (response.status === 403) {
          response.text()
            .then(body => {
              // If the API sent 'consent_required'
              //  we need to prompt the user
              if (body === 'consent_required') {
                promptForConsent((error) => {
                  if (error) {
                    renderError(error);
                  } else {
                    // Retry API call
                    loadUserCalendar(token, callback);
                  }
                });
              }
            });
        }
      }).catch(error => {
        renderError(error);
      });
    }
    function promptForConsent(callback) {
      // Cause Teams to popup a window for consent
      microsoftTeams.authentication.authenticate({
        url: `${window.location.origin}/authenticate`,
        width: 600,
        height: 535,
        successCallback: (result) => {
          callback(null);
        },
        failureCallback: (error) => {
          callback(error);
        }
      });
    }
    // </LoadUserCalendarSnippet>

    function renderCalendar(events) {
  $('#tab-container').empty();

  $('<pre/>').append($('<code/>', {
    text: JSON.stringify(events, null, 2),
    style: 'word-break: break-all;'
  })).appendTo('#tab-container');
}
  </script>
}